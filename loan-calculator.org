# -*- mode: org; -*-
#+TITLE: Loan Calculator
#+AUTHOR: Peter Moresi
#+DATE: <2014-09-26 Fri>
#+OPTIONS: ^:nil num:nil toc:nil

#+HTML: <a href="https://github.com/petermoresi/loan-calculator"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>
#+HTML: <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
#+HTML: <link href="css/worg.css" rel="stylesheet">


* User Input
#+BEGIN_HTML
    <div id="user-input" class="row">
      <div class="col-sm-6 ">
        Loan Amount
      </div>
      <div class="col-sm-6">
        <input type="text" id="loanAmount" class="user-input" value="50000" />
      </div>
     <div class="col-sm-6">
        Interest Rate
      </div>
      <div class="col-sm-6">
        <input type="text" id="interestRate" class="user-input" value="4.5">
      </div>
     <div class="col-sm-6">
        Years
      </div>
      <div class="col-sm-6">
        <input type="text" id="years" class="user-input" value="3" />
      </div> 
     <div class="col-sm-6">
        Payments per year
      </div>
      <div class="col-sm-6">
        <input type="text" id="paymentsPerYear" class="user-input" value="12" />
      </div>
      <div class="col-sm-6">
        Payment Amount
      </div>
      <div class="col-sm-6">
        <div id="paymentAmount"></div>
        <a href="#schedule">Schedule</a>
      </div>
   </div>
  
  
  

#+END_HTML
* Principle / Interest
  The interest payment is blue and the principle payment in yellow.
#+BEGIN_HTML
  <div id="graph"></div>
#+END_HTML
* Schedule
#+HTMl: <a name="schedule" />
#+BEGIN_HTML
  <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
  <script type="text/javascript" src="http://petermoresi.github.io/amortize-js/amortize.js"></script>
  <script type="text/javascript" src="loan-calculator.js"></script>
#+END_HTML
  
#+BEGIN_HTML
  <div id="schedule"></div>
#+END_HTML
* About this file 					      :info:noexport:

  The programming example demonstrates [[http://orgmode.org/worg/org-contrib/babel/intro.html][literate programming]] with [[http://www.org-mode.org][org-mode]].

  The file loan-calculator.html is generate by exporting this file.

  The file loan-calculator.js is generate by extracting the source code from this document into an executable form.

** How do I use this to change the program? 		      :info:noexport:
*** Export HTML

   The org-mode file can be used to generate a [[loan-calculator.html][web page]] with a simple loan calculator; as a literate program.

   1. Run the 'org-export-dispatch' function with:
      #+BEGIN_EXAMPLE
        M-x org-mode-dispatch
      #+END_EXAMPLE

      "M-x" usually means pressing the 'ALT' and 'x' key at the same time.

   2. Alteratively, use the keyboard shortcut:

       #+BEGIN_EXAMPLE
         C-c C-e h o
       #+END_EXAMPLE

   First, press 'CTRL' and 'c' at the same time; followed by 'CTRL' and 'e'. This will cause the export menu to appear. Typing 'h' followed by 'o' will export the file to HTML and open your default browser.

*** Export JavaScript
    
    1. Run the emacs command.
       #+BEGIN_EXAMPLE
       M-x org-babel-tangle
       #+END_EXAMPLE

    2. Use the keyboard shortcut.
       #+BEGIN_EXAMPLE
       C-c C-v t
       #+END_EXAMPLE
* Source Code						      :code:noexport:

  The source code is written JavaScript; and depends on [[https://github.com/petermoresi/amortize-js][amortize.js]].

   This function reads the values from the HTML inputs and returns a JSObject with:
   
   The application includes the following inputs:
   #+inputs:
   - loan_amount
   - interest_rate
   - payments_per_year
   - years

*** Functions
**** Get DoanAmount:float
     - interestRate:float
     - paymentsPerYear:int
     - years:int
     - payment:float
     - numberOfPayments:int
     - schedule:2DArray
     
#+NAME: getDataSet
#+BEGIN_SRC js
  function getDataSet() { 
      var output = {};
      var loanAmount = output.loanAmount = parseFloat( $('#loanAmount').val() );
      var interestRate = output.interestRate = parseFloat( $('#interestRate').val() );
      var paymentsPerYear = output.paymentsPerYear = parseInt( $('#paymentsPerYear').val() );
      var years = output.years = parseInt( $('#years').val() );
      var numberOfPayments = output.numberOfPayments = paymentsPerYear * years;
      
      var payment = output.payment = pmt(interestRate/100/paymentsPerYear, numberOfPayments, -loanAmount);
      
      output.schedule = computeSchedule( loanAmount,
                                         interestRate,
                                         paymentsPerYear,
                                         years,
                                         payment );
      return output;
  }

#+END_SRC
**** Reload Table
     The 'reloadTable' function clears the schedule and reloads using [[http://datatables.net][datatables.net]].
#+NAME: reloadTable
#+BEGIN_SRC js
  function reloadTable(ds) {
      // map the schedule to 2 digits after decimal point.
      var schedule = ds.schedule.map( function(n) { 
          return [n[0], n[1].toFixed(2), n[2].toFixed(2), n[3].toFixed(2)];
      });

      $('#schedule').empty();
      $('#schedule').html( '<table cellpadding="0" cellspacing="0" border="0" class="display table" id="schedule_table"></table>' );
      $('#schedule_table').dataTable( {
          "data": schedule,
          "searching": false,
          "columns": [
              { "title": "Period" },
              { "title": "Principle" },
              { "title": "Interest" },
              { "title": "Remaining" }
          ],
          "search": false,
          "paging":   false,
          "ordering": false,
          "info":     false
      } );   
  }
#+END_SRC
**** Reload Graph
     The 'reloadGraph' clears the graph and reloads
#+NAME: reloadGraph
#+BEGIN_SRC js
  function reloadGraph(ds) {
      var graphWidth = $('.table').width() // make graph same width as table
      var graphHeight = $('#graph').height();
      var periodWidth = Math.round(graphWidth / (ds.numberOfPayments));

      // adjust graphy width for rounding of period width
      graphWidth = periodWidth * ds.numberOfPayments;

      $('#graph').empty();
      $('#graph').width(graphWidth);

      for (var count = 0; count < ds.numberOfPayments; count++) {
          var i = ds.schedule[count][1];
          var p = ds.schedule[count][2];
          var t = i + p;
          var ratio = i / t;
          var height = graphHeight * ratio;
          $('<div style="float: left; background-color: yellow; height: ' + height + 'px; width: ' + periodWidth + 'px"></div>').appendTo('#graph');
      }
  }
#+END_SRC
**** Reload
     The 'reload' function reads the dataset and bindt the data to the HTML document.
#+NAME: handleKeyPress
#+BEGIN_SRC js
  function reload() {
      var ds = getDataSet();

      $('#paymentAmount').text('$' + ds.payment.toFixed(2));
      reloadTable(ds);
      reloadGraph(ds);
  }


  $(document).on('keyup', '.user-input', reload);
#+END_SRC
**** Handle Page Ready
#+NAME: handlePageReady
#+BEGIN_SRC js
  $(document).ready(function() {
      reload();
  });
#+END_SRC
*** Complete Script
#+BEGIN_SRC js :tangle loan-calculator.js :noweb yes
  //(function() {
      
      <<getDataSet>>

      <<reloadTable>>

      <<reloadGraph>>
          
      <<handleKeyPress>>
      
      <<handlePageReady>>

  //})();
#+END_SRC
* About the author					      :info:noexport:
  Hi, my name is Peter Moresi. I live in Southern California and work at a computer programmer at a local financial company.

  I love org-mode, emacs and linux. Although the majority of my professional experience is working with Microsoft's software.

#+BEGIN_SRC js
return Math.round(2.9)
#+END_SRC

#+RESULTS:
: 3

