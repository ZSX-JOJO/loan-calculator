# -*- mode: org; -*-
#+TITLE: Loan Calculator
#+AUTHOR: Peter Moresi
#+DATE: <2014-09-26 Fri>
#+OPTIONS: ^:nil

#+HTML: <a href="https://github.com/petermoresi/loan-calculator"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png"></a>

Loan Calculator is a simple loan calculator for internet browers.

#+BEGIN_HTML
      <div id="user-input" class="row">
        <div class="col-sm-6 ">
          Loan Amount
        </div>
        <div class="col-sm-6">
          <input type="text" id="loan_amount" class="user-input" value="50000" />
        </div>
       <div class="col-sm-6">
          Interest Rate
        </div>
        <div class="col-sm-6">
          <input type="text" id="interest_rate" class="user-input" value="4.5">
        </div>
       <div class="col-sm-6">
          Years
        </div>
        <div class="col-sm-6">
          <input type="text" id="years" class="user-input" value="3" />
        </div> 
       <div class="col-sm-6">
          Payments per year
        </div>
        <div class="col-sm-6">
          <input type="text" id="payments_per_year" class="user-input" value="12" />
        </div>
        <div class="col-sm-6">
          Payment Amount
        </div>
        <div class="col-sm-6">
          <div id="payment_amount"></div>
        </div>
     </div>

    <div id="schedule"></div>
#+END_HTML

#+BEGIN_HTML
<style>
@import url(http://fonts.googleapis.com/css?family=Droid+Sans|Droid+Sans+Mono|Droid+Serif);

@media all
{
    html {
	margin: 0;
	font: 300 .9em/1.6em "Droid Serif", Cambria, Georgia, "DejaVu Serif", serif;
	background-image: url(http://orgmode.org/img/org-mode-unicorn-logo-worg.png);
	background-attachment: fixed;
	background-position: right bottom;
	background-repeat: no-repeat;
	background-color: white;
    }

    body {
	font-size: 12pt;
	line-height: 18pt;
	color: black;
	margin-top: 0;

    }
    body #content {
	padding-top: 0px;
	max-width: 80%;
	min-width: 700px;
	margin-left: 20px;
	background-color: white;
	padding: 2em;
	/* box-shadow: 3px 3px 5px #888; */
    }
    body .title {
	margin-left: 0px;
	font-size: 22pt;
    }

    #org-div-home-and-up{
	position: fixed;
	right: 0;
	top: 4em;
    }

    /* TOC inspired by http://jashkenas.github.com/coffee-script */
    #table-of-contents {
        z-index: 1000;
	font-size: 10pt;
	position: fixed;
	left: 0em;
	top: 0em;
	background: white;
	line-height: 12pt;
	text-align: right;
	box-shadow: 0 0 1em #777777;
	-webkit-box-shadow: 0 0 1em #777777;
	-moz-box-shadow: 0 0 1em #777777;
	-webkit-border-bottom-left-radius: 5px;
	-moz-border-radius-bottomleft: 5px;
	/* ensure doesn't flow off the screen when expanded */
	max-height: 80%;
	overflow: auto; }
    #table-of-contents h2 {
	font-size: 13pt;
	max-width: 9em;
	border: 0;
	font-weight: normal;
	padding-left: 0.5em;
	padding-right: 0.5em;
	padding-top: 0.05em;
	padding-bottom: 0.05em; }
    #table-of-contents #text-table-of-contents {
	display: none;
	text-align: left; }
    #table-of-contents:hover #text-table-of-contents {
	display: block;
	padding: 0.5em;
	margin-top: -1.5em; }

    #license {
      /* padding: .3em; */
      /* border: 1px solid gray; */
      background-color: #eeeeee;
    }

    h1 {
	/*
	  font-family:Sans;
	  font-weight:bold; */
	font-size:2.1em;
	padding:0 0 30px 0;
	margin-top: 10px;
	margin-bottom: 10px;
	margin-right: 7%;
	/*    color: #6C5D4F; */
	color: grey;
    }

    /*
      h2:before {
      content: "* "
      }

h3:before {
content: "** "
}

h4:before {
content: "*** "
}
*/

    h2 {
	font-family:sans-serif;
	font-size:1.45em;
	line-height:16px;
	padding:10px 0 10px 0;
	color: black;
	border-bottom: 1px solid #ddd;
    }

    .outline-text-2 {
	margin-left: 0.1em
    }

    h3 {
	font-family:sans-serif;
	font-size:1.3em;
	color: grey;
	margin-left: 0.6em;
    }

    /* #A34D32;*/


    .outline-text-3 {
	margin-left: 0.9em;
    }

    h4 {
	font-family:sans-serif;
	font-size:1.2em;
	margin-left: 1.2em;
	color: #A5573E;
    }

    .outline-text-4 {
	margin-left: 1.45em;
    }

    a {text-decoration: none; font-weight: 400;}
    a:visited {text-decoration: none; font-weight: 400;}
    a:hover {text-decoration: underline;}

    .todo {
	color: #CA0000;
    }

    .done {
	color: #006666;
    }

    .timestamp-kwd {
	color: #444;
    }

    .tag {

    }

    li {
	margin: .4em;
    }

    table {
	border: none;
    }

    td {
	border: none;
    }

    th {
	border: none;
    }

    code {
	font-size: 100%;
	color: black;
	border: 1px solid #DEDEDE;
	padding: 0px 0.2em;
    }

    img {
	border: none;
    }

    .share img {
	opacity: .4;
	-moz-opacity: .4;
	filter: alpha(opacity=40);
    }

    .share img:hover {
	opacity: 1;
	-moz-opacity: 1;
	filter: alpha(opacity=100);
    }

    /* pre {border: 1px solid #555; */
    /*      background: #EEE; */
    /*      font-size: 9pt; */
    /*      padding: 1em; */
    /*     } */

    /* pre { */
    /*     color: #e5e5e5; */
    /*     background-color: #000000; */
    /*     padding: 1.4em; */
    /*     border: 2px solid gray; */
    /* } */

    /* pre { */
    /*     background-color: #2b2b2b; */
    /*     border: 4px solid gray; */
    /*     color: #EEE; */
    /*     overflow: auto; */
    /*     padding: 1em; */
    /*  } */

    pre {
	font-family: Droid Sans Mono, Monaco, Consolas, "Lucida Console", monospace;
	color: black;
	font-size: 90%;
	background-color: #ffffff;
	padding: 1.2em;
	border: 2px solid #dddddd;
	overflow: auto;
    }

    .org-info-box {
	clear:both;
	margin-left:auto;
	margin-right:auto;
	padding:0.7em;
    /* border:1px solid #CCC; */
    /* border-radius:10px; */
    /* -moz-border-radius:10px; */
    }
    .org-info-box img {
	float:left;
	margin:0em 0.5em 0em 0em;
    }
    .org-info-box p {
	margin:0em;
	padding:0em;
    }


    .builtin {
	/* font-lock-builtin-face */
	color: #f4a460;
    }
    .comment {
	/* font-lock-comment-face */
	color: #737373;
    }
    .comment-delimiter {
	/* font-lock-comment-delimiter-face */
	color: #666666;
    }
    .constant {
	/* font-lock-constant-face */
	color: #db7093;
    }
    .doc {
	/* font-lock-doc-face */
	color: #b3b3b3;
    }
    .function-name {
	/* font-lock-function-name-face */
	color: #5f9ea0;
    }
    .headline {
	/* headline-face */
	color: #ffffff;
	background-color: #000000;
	font-weight: bold;
    }
    .keyword {
	/* font-lock-keyword-face */
	color: #4682b4;
    }
    .negation-char {
    }
    .regexp-grouping-backslash {
    }
    .regexp-grouping-construct {
    }
    .string {
	/* font-lock-string-face */
	color: #ccc79a;
    }
    .todo-comment {
	/* todo-comment-face */
	color: #ffffff;
	background-color: #000000;
	font-weight: bold;
    }
    .variable-name {
	/* font-lock-variable-name-face */
	color: #ff6a6a;
    }
    .warning {
	/* font-lock-warning-face */
	color: #ffffff;
	background-color: #cd5c5c;
	font-weight: bold;
    }
    pre.a {
	color: inherit;
	background-color: inherit;
	font: inherit;
	text-decoration: inherit;
    }
    pre.a:hover {
	text-decoration: underline;
    }

    /* Styles for org-info.js */

    .org-info-js_info-navigation
    {
	border-style:none;
    }

    #org-info-js_console-label
    {
	font-size:10px;
	font-weight:bold;
	white-space:nowrap;
    }

    .org-info-js_search-highlight
    {
	background-color:#ffff00;
	color:#000000;
	font-weight:bold;
    }

    #org-info-js-window
    {
	border-bottom:1px solid black;
	padding-bottom:10px;
	margin-bottom:10px;
    }



    .org-info-search-highlight
    {
	background-color:#adefef; /* same color as emacs default */
	color:#000000;
	font-weight:bold;
    }

    .org-bbdb-company {
	/* bbdb-company */
	font-style: italic;
    }
    .org-bbdb-field-name {
    }
    .org-bbdb-field-value {
    }
    .org-bbdb-name {
	/* bbdb-name */
	text-decoration: underline;
    }
    .org-bold {
	/* bold */
	font-weight: bold;
    }
    .org-bold-italic {
	/* bold-italic */
	font-weight: bold;
	font-style: italic;
    }
    .org-border {
	/* border */
	background-color: #000000;
    }
    .org-buffer-menu-buffer {
	/* buffer-menu-buffer */
	font-weight: bold;
    }
    .org-builtin {
	/* font-lock-builtin-face */
	color: #da70d6;
    }
    .org-button {
	/* button */
	text-decoration: underline;
    }
    .org-c-nonbreakable-space {
	/* c-nonbreakable-space-face */
	background-color: #ff0000;
	font-weight: bold;
    }
    .org-calendar-today {
	/* calendar-today */
	text-decoration: underline;
    }
    .org-comment {
	/* font-lock-comment-face */
	color: #b22222;
    }
    .org-comment-delimiter {
	/* font-lock-comment-delimiter-face */
	color: #b22222;
    }
    .org-constant {
	/* font-lock-constant-face */
	color: #5f9ea0;
    }
    .org-cursor {
	/* cursor */
	background-color: #000000;
    }
    .org-default {
	/* default */
	color: #000000;
	background-color: #ffffff;
    }
    .org-diary {
	/* diary */
	color: #ff0000;
    }
    .org-doc {
	/* font-lock-doc-face */
	color: #bc8f8f;
    }
    .org-escape-glyph {
	/* escape-glyph */
	color: #a52a2a;
    }
    .org-file-name-shadow {
	/* file-name-shadow */
	color: #7f7f7f;
    }
    .org-fixed-pitch {
    }
    .org-fringe {
	/* fringe */
	background-color: #f2f2f2;
    }
    .org-function-name {
	/* font-lock-function-name-face */
	color: #0000ff;
    }
    .org-header-line {
	/* header-line */
	color: #333333;
	background-color: #e5e5e5;
    }
    .org-help-argument-name {
	/* help-argument-name */
	font-style: italic;
    }
    .org-highlight {
	/* highlight */
	background-color: #b4eeb4;
    }
    .org-holiday {
	/* holiday */
	background-color: #ffc0cb;
    }
    .org-info-header-node {
	/* info-header-node */
	color: #a52a2a;
	font-weight: bold;
	font-style: italic;
    }
    .org-info-header-xref {
	/* info-header-xref */
	color: #0000ff;
	text-decoration: underline;
    }
    .org-info-menu-header {
	/* info-menu-header */
	font-weight: bold;
    }
    .org-info-menu-star {
	/* info-menu-star */
	color: #ff0000;
    }
    .org-info-node {
	/* info-node */
	color: #a52a2a;
	font-weight: bold;
	font-style: italic;
    }
    .org-info-title-1 {
	/* info-title-1 */
	font-size: 172%;
	font-weight: bold;
    }
    .org-info-title-2 {
	/* info-title-2 */
	font-size: 144%;
	font-weight: bold;
    }
    .org-info-title-3 {
	/* info-title-3 */
	font-size: 120%;
	font-weight: bold;
    }
    .org-info-title-4 {
	/* info-title-4 */
	font-weight: bold;
    }
    .org-info-xref {
	/* info-xref */
	color: #0000ff;
	text-decoration: underline;
    }
    .org-isearch {
	/* isearch */
	color: #b0e2ff;
	background-color: #cd00cd;
    }
    .org-italic {
	/* italic */
	font-style: italic;
    }
    .org-keyword {
	/* font-lock-keyword-face */
	color: #a020f0;
    }
    .org-lazy-highlight {
	/* lazy-highlight */
	background-color: #afeeee;
    }
    .org-link {
	/* link */
	color: #0000ff;
	text-decoration: underline;
    }
    .org-link-visited {
	/* link-visited */
	color: #8b008b;
	text-decoration: underline;
    }
    .org-match {
	/* match */
	background-color: #ffff00;
    }
    .org-menu {
    }
    .org-message-cited-text {
	/* message-cited-text */
	color: #ff0000;
    }
    .org-message-header-cc {
	/* message-header-cc */
	color: #191970;
    }
    .org-message-header-name {
	/* message-header-name */
	color: #6495ed;
    }
    .org-message-header-newsgroups {
	/* message-header-newsgroups */
	color: #00008b;
	font-weight: bold;
	font-style: italic;
    }
    .org-message-header-other {
	/* message-header-other */
	color: #4682b4;
    }
    .org-message-header-subject {
	/* message-header-subject */
	color: #000080;
	font-weight: bold;
    }
    .org-message-header-to {
	/* message-header-to */
	color: #191970;
	font-weight: bold;
    }
    .org-message-header-xheader {
	/* message-header-xheader */
	color: #0000ff;
    }
    .org-message-mml {
	/* message-mml */
	color: #228b22;
    }
    .org-message-separator {
	/* message-separator */
	color: #a52a2a;
    }
    .org-minibuffer-prompt {
	/* minibuffer-prompt */
	color: #0000cd;
    }
    .org-mm-uu-extract {
	/* mm-uu-extract */
	color: #006400;
	background-color: #ffffe0;
    }
    .org-mode-line {
	/* mode-line */
	color: #000000;
	background-color: #bfbfbf;
    }
    .org-mode-line-buffer-id {
	/* mode-line-buffer-id */
	font-weight: bold;
    }
    .org-mode-line-highlight {
    }
    .org-mode-line-inactive {
	/* mode-line-inactive */
	color: #333333;
	background-color: #e5e5e5;
    }
    .org-mouse {
	/* mouse */
	background-color: #000000;
    }
    .org-negation-char {
    }
    .org-next-error {
	/* next-error */
	background-color: #eedc82;
    }
    .org-nobreak-space {
	/* nobreak-space */
	color: #a52a2a;
	text-decoration: underline;
    }
    .org-org-agenda-date {
	/* org-agenda-date */
	color: #0000ff;
    }
    .org-org-agenda-date-weekend {
	/* org-agenda-date-weekend */
	color: #0000ff;
	font-weight: bold;
    }
    .org-org-agenda-restriction-lock {
	/* org-agenda-restriction-lock */
	background-color: #ffff00;
    }
    .org-org-agenda-structure {
	/* org-agenda-structure */
	color: #0000ff;
    }
    .org-org-archived {
	/* org-archived */
	color: #7f7f7f;
    }
    .org-org-code {
	/* org-code */
	color: #7f7f7f;
    }
    .org-org-column {
	/* org-column */
	background-color: #e5e5e5;
    }
    .org-org-column-title {
	/* org-column-title */
	background-color: #e5e5e5;
	font-weight: bold;
	text-decoration: underline;
    }
    .org-org-date {
	/* org-date */
	color: #a020f0;
	text-decoration: underline;
    }
    .org-org-done {
	/* org-done */
	color: #228b22;
	font-weight: bold;
    }
    .org-org-drawer {
	/* org-drawer */
	color: #0000ff;
    }
    .org-org-ellipsis {
	/* org-ellipsis */
	color: #b8860b;
	text-decoration: underline;
    }
    .org-org-formula {
	/* org-formula */
	color: #b22222;
    }
    .org-org-headline-done {
	/* org-headline-done */
	color: #bc8f8f;
    }
    .org-org-hide {
	/* org-hide */
	color: #e5e5e5;
    }
    .org-org-latex-and-export-specials {
	/* org-latex-and-export-specials */
	color: #8b4513;
    }
    .org-org-level-1 {
	/* org-level-1 */
	color: #0000ff;
    }
    .org-org-level-2 {
	/* org-level-2 */
	color: #b8860b;
    }
    .org-org-level-3 {
	/* org-level-3 */
	color: #a020f0;
    }
    .org-org-level-4 {
	/* org-level-4 */
	color: #b22222;
    }
    .org-org-level-5 {
	/* org-level-5 */
	color: #228b22;
    }
    .org-org-level-6 {
	/* org-level-6 */
	color: #5f9ea0;
    }
    .org-org-level-7 {
	/* org-level-7 */
	color: #da70d6;
    }
    .org-org-level-8 {
	/* org-level-8 */
	color: #bc8f8f;
    }
    .org-org-link {
	/* org-link */
	color: #a020f0;
	text-decoration: underline;
    }
    .org-org-property-value {
    }
    .org-org-scheduled-previously {
	/* org-scheduled-previously */
	color: #b22222;
    }
    .org-org-scheduled-today {
	/* org-scheduled-today */
	color: #006400;
    }
    .org-org-sexp-date {
	/* org-sexp-date */
	color: #a020f0;
    }
    .org-org-special-keyword {
	/* org-special-keyword */
	color: #bc8f8f;
    }
    .org-org-table {
	/* org-table */
	color: #0000ff;
    }
    .org-org-tag {
	/* org-tag */
	font-weight: bold;
    }
    .org-org-target {
	/* org-target */
	text-decoration: underline;
    }
    .org-org-time-grid {
	/* org-time-grid */
	color: #b8860b;
    }
    .org-org-todo {
	/* org-todo */
	color: #ff0000;
    }
    .org-org-upcoming-deadline {
	/* org-upcoming-deadline */
	color: #b22222;
    }
    .org-org-verbatim {
	/* org-verbatim */
	color: #7f7f7f;
	text-decoration: underline;
    }
    .org-org-warning {
	/* org-warning */
	color: #ff0000;
	font-weight: bold;
    }
    .org-outline-1 {
	/* outline-1 */
	color: #0000ff;
    }
    .org-outline-2 {
	/* outline-2 */
	color: #b8860b;
    }
    .org-outline-3 {
	/* outline-3 */
	color: #a020f0;
    }
    .org-outline-4 {
	/* outline-4 */
	color: #b22222;
    }
    .org-outline-5 {
	/* outline-5 */
	color: #228b22;
    }
    .org-outline-6 {
	/* outline-6 */
	color: #5f9ea0;
    }
    .org-outline-7 {
	/* outline-7 */
	color: #da70d6;
    }
    .org-outline-8 {
	/* outline-8 */
	color: #bc8f8f;
    }
    .outline-text-1, .outline-text-2, .outline-text-3, .outline-text-4, .outline-text-5, .outline-text-6 {
    /* Add more spacing between section. Padding, so that folding with org-info.js works as expected. */

    }

    .org-preprocessor {
	/* font-lock-preprocessor-face */
	color: #da70d6;
    }
    .org-query-replace {
	/* query-replace */
	color: #b0e2ff;
	background-color: #cd00cd;
    }
    .org-regexp-grouping-backslash {
	/* font-lock-regexp-grouping-backslash */
	font-weight: bold;
    }
    .org-regexp-grouping-construct {
	/* font-lock-regexp-grouping-construct */
	font-weight: bold;
    }
    .org-region {
	/* region */
	background-color: #eedc82;
    }
    .org-rmail-highlight {
    }
    .org-scroll-bar {
	/* scroll-bar */
	background-color: #bfbfbf;
    }
    .org-secondary-selection {
	/* secondary-selection */
	background-color: #ffff00;
    }
    .org-shadow {
	/* shadow */
	color: #7f7f7f;
    }
    .org-show-paren-match {
	/* show-paren-match */
	background-color: #40e0d0;
    }
    .org-show-paren-mismatch {
	/* show-paren-mismatch */
	color: #ffffff;
	background-color: #a020f0;
    }
    .org-string {
	/* font-lock-string-face */
	color: #bc8f8f;
    }
    .org-texinfo-heading {
	/* texinfo-heading */
	color: #0000ff;
    }
    .org-tool-bar {
	/* tool-bar */
	color: #000000;
	background-color: #bfbfbf;
    }
    .org-tooltip {
	/* tooltip */
	color: #000000;
	background-color: #ffffe0;
    }
    .org-trailing-whitespace {
	/* trailing-whitespace */
	background-color: #ff0000;
    }
    .org-type {
	/* font-lock-type-face */
	color: #228b22;
    }
    .org-underline {
	/* underline */
	text-decoration: underline;
    }
    .org-variable-name {
	/* font-lock-variable-name-face */
	color: #b8860b;
    }
    .org-variable-pitch {
    }
    .org-vertical-border {
    }
    .org-warning {
	/* font-lock-warning-face */
	color: #ff0000;
	font-weight: bold;
    }
    .rss_box {}
    .rss_title, rss_title a {}
    .rss_items {}
    .rss_item a:link, .rss_item a:visited, .rss_item a:active {}
    .rss_item a:hover {}
    .rss_date {}

    label.org-src-name {
	font-size: 80%;
	font-style: italic;
    }

    #show_source {margin: 0; padding: 0;}

    #postamble {
	font-size: 75%;
	min-width: 700px;
	max-width: 80%;
	margin-left: 20px;
	margin-top: 10px;
	padding: .2em;
	border: 1px solid gray;
	background-color: #ffffff;
	z-index: -1000;
    }


} /* END OF @media all */



@media screen
{
    #table-of-contents {
	float: right;
	border: 1px solid #CCC;
	max-width: 50%;
	overflow: auto;
    }
} /* END OF @media screen */
</style>
#+END_HTML

#+BEGIN_HTML
      <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
      <script src="http://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
      <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
#+END_HTML

#+BEGIN_HTML
  <script>
  (function() {

      function pmt(rate,nper,pv) {
          var pvif, pmt;
      
          pvif = Math.pow( 1 + rate, nper);
          pmt = rate / (pvif - 1) * -(pv * pvif);   
      
          return pmt;
      };
      function compute_schedule(loan_amount, interest_rate, payments_per_year, years, payment) {
          var schedule = [];
          var remaining = loan_amount;
          var number_of_payments = payments_per_year * years;
      
          for (var i=0; i<=number_of_payments; i++) {
              var interest = remaining * (interest_rate/100/payments_per_year);
              var principle = (payment-interest);
              var row = [i, principle.toFixed(2), interest.toFixed(2), remaining.toFixed(2)];
              schedule.push(row);
              remaining -= principle
          }
      
          return schedule;
      }

      
      function getDataSet() { 
          var loan_amount = parseFloat( $('#loan_amount').val() );
          var interest_rate = parseFloat( $('#interest_rate').val() );
          var payments_per_year = parseInt( $('#payments_per_year').val() );
          var years = parseInt( $('#years').val() );
          
          var payment = pmt(interest_rate/100/payments_per_year, payments_per_year * years, -loan_amount);
          
          $('#payment_amount').text('$' + payment.toFixed(2));
          
          return compute_schedule(loan_amount,
                                  interest_rate,
                                  payments_per_year,
                                  years,
                                  payment);
      }
      
      function reloadTable() {
          $('#schedule').empty();
          $('#schedule').html( '<table cellpadding="0" cellspacing="0" border="0" class="display table" id="schedule_table"></table>' );
          $('#schedule_table').dataTable( {
              "data": getDataSet(),
              "columns": [
                  { "title": "Period" },
                  { "title": "Principle" },
                  { "title": "Interest" },
                  { "title": "Remaining" }
              ],
              "search": false,
              "paging":   false,
              "ordering": false,
              "info":     false
          } );   
      }
      
      $(document).ready(function() {
          reloadTable();
          
          $(document).on('keyup', '.user-input', function(e) {
              reloadTable();
          });
      });


  })();
  </script>
#+END_HTML


* Source Code						      :code:noexport:

  The source code is written JavaScript; and implements these functions:

  #+NAME: functions
  |-----------------------------------------------------------+---------------------------------------------------------------------------------|
  | function name                                             | purpose                                                                         |
  |-----------------------------------------------------------+---------------------------------------------------------------------------------|
  | [[*Calculate Payment][pmt]]                               | Calculate the payment per term                                                  |
  | [[*Calculate Schedule][compute_schedule]]                 | Computes amortization schedule; returns data table as a multi-dimensional array |
  | [[*Read Inputs][ReadInputs]]                              | Queries the values from the HTML inputs and returns the data in a JSObject      |
  | Anonymous                                                 | Used for hiding variables in function scope and running at startup.             |
  |-----------------------------------------------------------+---------------------------------------------------------------------------------|

** Calculate Payment

    1. The function signature:
        #+NAME: define-pmt
        #+BEGIN_SRC js 
         pmt(rate,nper,pv)
       #+END_SRC
   
       #+NAME: pmt-args
        |------+-----------------------------------------------------------------------------------------------------------------------|
        | name | comments                                                                                                              |
        |------+-----------------------------------------------------------------------------------------------------------------------|
        | rate | is the interest rate for the loan.                                                                                    |
        | nper | is the total number of payments for the loan.                                                                         |
        | pv   | is the present value, or the total amount that a series of future payments is worth now; also known as the principal. |
        |------+-----------------------------------------------------------------------------------------------------------------------|
    2. In order to calculate the payment we need to first calculate the Present Value Interest Factor (PVIF).o
       #+NAME: calculate-pvif
       #+BEGIN_SRC js
          pvif = Math.pow( 1 + rate, nper);
       #+END_SRC
    3. Using the PVIF we can calculate the payment.
       #+NAME: calculate-pmt
       #+BEGIN_SRC js
         pmt = rate / (pvif - 1) * -(pv * pvif);
       #+END_SRC
    4. Finally, the sections are combined into a function.
       #+NAME: pmt
       #+BEGIN_SRC js :noweb yes
         function <<define-pmt>> {
             var pvif, pmt;

             <<calculate-pvif>>
             <<calculate-pmt>>   

             return pmt;
         };
       #+END_SRC

** Calculate Schedule

   The function to compute amortization schedule is named 'compute_schedule'.

    1. The function signature is:
        #+NAME: define-compute-schedule
        #+BEGIN_SRC js
          compute_schedule(loan_amount, interest_rate, payments_per_year, years, payment)
        #+END_SRC

        #+NAME: compute-schedule-args
        |-------------------+----------------------------------------------------|
        | name              | comments                                           |
        |-------------------+----------------------------------------------------|
        | loan_amount       | is the amount borrowed to purchase the property.   |
        | interest_rate     | is the percentage used to calculate interest due.  |
        | payments_per_year | is the number of payments made in a calendar year. |
        | years             | is the number of years.                            |
        | payment           | is the amount of the payment each period.          |
        |-------------------+----------------------------------------------------|
    2. Define an array to capture the schedule.
       #+NAME: define-schedule-array
       #+BEGIN_SRC js
         var schedule = [];
       #+END_SRC
    3. Define a variable to track the remaining balance.
       #+NAME: define-remaining-balance
       #+BEGIN_SRC js
         var remaining = loan_amount;
       #+END_SRC
    4. Compute the total number of payments.
       #+NAME: compute-number-of-payments
       #+BEGIN_SRC js
         var number_of_payments = payments_per_year * years;
       #+END_SRC
    5. Loop through all of the periods and capture the entries in the schedule.
       #+NAME: loop-schedule
       #+BEGIN_SRC js
         for (var i=0; i<=number_of_payments; i++) {
             var interest = remaining * (interest_rate/100/payments_per_year);
             var principle = (payment-interest);
             var row = [i, principle.toFixed(2), interest.toFixed(2), remaining.toFixed(2)];
             schedule.push(row);
             remaining -= principle
         }
       #+END_SRC
    6. Finally, the sections are combined into a function.
       #+NAME: compute-schedule
       #+BEGIN_SRC js :noweb yes
         function <<define-compute-schedule>> {
             <<define-schedule-array>>
             <<define-remaining-balance>>
             <<compute-number-of-payments>>

             <<loop-schedule>>

             return schedule;
         }
       #+END_SRC

** Anonymous (Startup)
#+NAME: startup
#+BEGIN_SRC js :noweb yes
  (function() {

      <<pmt>>
      <<compute-schedule>>

      
      function getDataSet() { 
          var loan_amount = parseFloat( $('#loan_amount').val() );
          var interest_rate = parseFloat( $('#interest_rate').val() );
          var payments_per_year = parseInt( $('#payments_per_year').val() );
          var years = parseInt( $('#years').val() );
          
          var payment = pmt(interest_rate/100/payments_per_year, payments_per_year * years, -loan_amount);
          
          $('#payment_amount').text('$' + payment.toFixed(2));
          
          return compute_schedule(loan_amount,
                                  interest_rate,
                                  payments_per_year,
                                  years,
                                  payment);
      }
      
      function reloadTable() {
          $('#schedule').empty();
          $('#schedule').html( '<table cellpadding="0" cellspacing="0" border="0" class="display table" id="schedule_table"></table>' );
          $('#schedule_table').dataTable( {
              "data": getDataSet(),
              "columns": [
                  { "title": "Period" },
                  { "title": "Principle" },
                  { "title": "Interest" },
                  { "title": "Remaining" }
              ],
              "search": false,
              "paging":   false,
              "ordering": false,
              "info":     false
          } );   
      }
      
      $(document).ready(function() {
          reloadTable();
          
          $(document).on('keyup', '.user-input', function(e) {
              reloadTable();
          });
      });


  })();
#+END_SRC
* Test Source Code					      :code:noexport:
** Compute Schedule								   
  #+NAME: run-compute-schedule
  #+BEGIN_SRC js :exports results :results output :noweb yes :var loan_amount=10000 interest_rate=4.5 payments_per_year=12 years=3 payment=297.47
    <<compute-schedule-function>>

    console.log('loan_amount: ' + loan_amount);
    console.log('interest_rate: ' + interest_rate);
    console.log('payments_per_year: ' + payments_per_year);
    console.log('years: ' + years);
    console.log('payment: ' + payment);
    console.log( JSON.stringify(
	compute_schedule(loan_amount, interest_rate, payments_per_year, years, payment), 0, 4
    ))
  #+END_SRC

  #+RESULTS: run-compute-schedule
  : loan_amount: 10000
  : interest_rate: 4.5
  : payments_per_year: 12
  : years: 3
  : payment: 297.47
  : [[0,"259.97","37.50","10000.00"],[1,"260.94","36.53","9740.03"],[2,"261.92","35.55","9479.09"],[3,"262.91","34.56","9217.16"],[4,"263.89","33.58","8954.26"],[5,"264.88","32.59","8690.36"],[6,"265.87","31.60","8425.48"],[7,"266.87","30.60","8159.61"],[8,"267.87","29.60","7892.74"],[9,"268.88","28.59","7624.87"],[10,"269.89","27.58","7355.99"],[11,"270.90","26.57","7086.10"],[12,"271.91","25.56","6815.21"],[13,"272.93","24.54","6543.29"],[14,"273.96","23.51","6270.36"],[15,"274.98","22.49","5996.40"],[16,"276.01","21.46","5721.42"],[17,"277.05","20.42","5445.41"],[18,"278.09","19.38","5168.36"],[19,"279.13","18.34","4890.27"],[20,"280.18","17.29","4611.14"],[21,"281.23","16.24","4330.96"],[22,"282.28","15.19","4049.73"],[23,"283.34","14.13","3767.45"],[24,"284.40","13.07","3484.10"],[25,"285.47","12.00","3199.70"],[26,"286.54","10.93","2914.23"],[27,"287.62","9.85","2627.69"],[28,"288.69","8.78","2340.07"],[29,"289.78","7.69","2051.38"],[30,"290.86","6.61","1761.60"],[31,"291.95","5.52","1470.73"],[32,"293.05","4.42","1178.78"],[33,"294.15","3.32","885.73"],[34,"295.25","2.22","591.58"],[35,"296.36","1.11","296.33"],[36,"297.47","-0.00","-0.03"]]

** Should be 297.47

  #+NAME: run-pmt
  #+BEGIN_SRC js :exports results :noweb yes :var interest_rate=4.5 payments_per_year=12 years=3 loan_amount=10000
    <<pmt-function>>
    return pmt(interest_rate/100/payments_per_year, payments_per_year * years, -loan_amount).toFixed(2);
  #+END_SRC

  #+RESULTS: run-pmt
  : 297.47

** Should be 2245.22

   #+CALL: run-pmt(interest_rate=3.5, payments_per_year=12, years=30, loan_amount=500000)

   #+RESULTS:
   : 2245.22
* How does this work?					      :info:noexport:

  Loan calculator is an [[http://www.org-mode.org][org-mode]] file that includes JavaScript functions to calculate loan payments and amortization schedules.

  The org-mode file can be used to generate a [[loan-calculator.html][web page]] with a simple loan calculator; as a literate program.

  You can be done in one of two ways:

  1. You can run the 'org-export-dispatch' function with:
  #+BEGIN_EXAMPLE
  M-x org-mode-dispatch
  #+END_EXAMPLE

  The "M-x" key means press the 'ALT' and 'x' key at the same time.

  Alteratively you can use the keyboard shortcut:

  #+BEGIN_EXAMPLE
  C-c C-e h o
  #+END_EXAMPLE

  First, press 'CTRL' and 'c' at the same time; followed by 'CTRL' and 'e'. This will cause the export menu to appear. Typing 'h' followed by 'o' will export the file to HTML and open your default browser.
* About this program					      :info:noexport:

  The programming example in this paper is trivial but effectively demonstrates the [[http://orgmode.org/worg/org-contrib/babel/intro.html][literate programming features]].

  This is the generated documentation for a [[./amortize.js][literate program]] authored in [[http://www.org-mode.org][org-mode]].

  The webpage uses [[https://github.com/fniessen/org-html-themes][org-html-themes]] for updating the look and feel.
  
* About the author					      :info:noexport:
  Hi, my name is Peter Moresi. I live in Southern California and work at a computer programmer at a local financial company.

  I love org-mode, emacs and linux. Although the majority of my professional experience is working with Microsoft's software.
